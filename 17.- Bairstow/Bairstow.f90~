!Autor: Claudio Iván Esparza Castañeda
!Título: Müller
!Descripción: Programa que se encarga de calcular las raíces de un polinomio a partir del método de Müller
!Fecha: 07/11/2018
Program mul
  implicit none
  REAL, allocatable, dimension(:)::A, B, BP, BQ
  REAL::e, h, f, p, q, dp, dq, dn, r, rt, z, x1, x2
  INTEGER::i, n, j
  COMPLEX::y1, y2
1  WRITE(*, *) "Grado del polinomio"
  READ(*, *) n
  allocate(A(0:n), B(0:n), BP(0:n), BQ(0:n))
  WRITE(*, *) "Coeficientes del polinomio a0+a1x+a2x²+...anx^n"
  do i=0, n
     READ(*, *) A(i)
  end do
  p=0
  q=0
  WRITE(*, *) "Error"
  READ(*, *) e
  do
     do i=n, 1, -1
        B(i)=A(i)-p*B(i+1)-q*B(i+2)
     end do
     B(0)=A(0)-Q*B(2)
     do i=n, 1, -1
        BP(i)=-B(i+1)-p*BP(i+1)-Q*BP(i+2)
        BQ(i)=-BQ(i+1)-B(i+2)-Q*BQ(i+2)
     end do
     BP(0)=-Q*BP(2)
     BQ(0)=-Q*BQ(2)-B(2)
     dn=BP(0)*BQ(1)-BP(1)*BQ(0)
     dp=(B(0)*BQ(1)-B(1)*BQ(0))/dn
     p=p-dp
     dq=(B(1)*BP(0)-B(0)*BP(1))/dn
     q=q-dq
     j=j+1
     if (abs(dq)*abs(dp) .le. e) then
        EXIT
     end if
  end do
  WRITE(*, *) p, q
  r=p*p-4*q
  if (r .ge. 0) then
     rt=sqrt(r)
     x1=(-p+rt)/2
     x2=(-p-rt)/2
     WRITE(*, *) "Las raíces son:"
     WRITE(*, *) x1, x2
  end if
  if (r .lt. 0) then
     rt=sqrt(-r)
     y1=COMPLEX(-p/2, rt/2)
     y2=COMPLEX(-p/2, -rt/2)
     WRITE(*, *) "Las raíces son:"
     WRITE(*, *) y1, y2
  end if
  WRITE(*, *) "Orden Coeficientes"
  do i=2, n
     WRITE(*, *) i-2, B(i)
  end do
  deallocate(A, B, BP, BQ)
  goto 1
end Program mul




